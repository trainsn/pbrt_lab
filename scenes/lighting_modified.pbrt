#
# Camera configuration: the camera is located on the X axis, and is
# pointed at the center of the scene
#
LookAt 5 0 0   # eye
        0 0 0    # look at point
        0 0 1    # up vector
Camera "perspective" "float fov" 50


#
# Sampling specification: PBRT will shoot 4 samples rays per pixel.
# Increasing the number of samples per pixel will increase image quality
# at the cost of increased rendering time. 
#
Sampler "halton" "integer pixelsamples" [4] 


#
# Integrator specification: PBRT will compute a single bounce of light.
# Increasing maxdepth increases the bounces of light computed, and will
# drastically increase the noise of the final image. To decrease noise,
# increase the pixelsamples of the sampler above
#
Integrator "path" "integer maxdepth" [1]


#
# The following lines define the size of the output image and the name of
# of the file containing the result of rendering
#
Film "image" "string filename" "test_lab1_scene.png"
     "integer xresolution" [300] "integer yresolution" [300]

#
#begin describing scene
#
WorldBegin

#
# light source configuration:  The next region of the pbrt scene file
# defines the light sources that illuminate the scene. Currently the
# scene is illuminated by a single spotlight source
#
# Spotlight source with 60 degree cone angle pointed at the center of
# the scene
LightSource "spot" "color I" [50 50 50] "point from" [1.5 1 4.1] "point to" [0 0 0] "float coneangle" [60]


# Arealight source: Currently commented out, but you will use area
# lights later to create more complex lighting conditions.
# In the definition below, the area light is specified to
# be a disk of radius 1.5. For each pixel in the scene 4 sample rays
# are shot toward points on the light source to determine shadowing.
# 
# AttributeBegin
#  AreaLightSource "area" "color L" [50 50 50]
#  # adjust light source position
#   Translate 0 6 0  # x y z
#   Rotate 90 1 0 0  # angle x y z  Note: this change the orientation of light source
#  # define the shape of the arealight to be a disk with radius 1.5
#  Shape "disk" "float radius" [1.5] 
# AttributeEnd


#
# creat a checkerboard ground plane
#
AttributeBegin
  Texture "checks" "spectrum" "checkerboard"
          "float uscale" [8] "float vscale" [8]
          "rgb tex1" [.1 .1 .1] "rgb tex2" [.8 .8 .8]
  Material "matte" "texture Kd" "checks"
  Translate 0 0 -1
  Shape "trianglemesh"
      "integer indices" [0 1 2 0 2 3]
      "point P" [ -20 -20 0   20 -20 0   20 20 0   -20 20 0 ]
      "float st" [ 0 0   1 0    1 1   0 1 ]
AttributeEnd


#
# Environment map light source: Currently commented out, but you will use
# this later to create even more complex lighting conditions. 
# An HDR panorama is used to create an angularly varying
# light source shining into the scene from all directions
# you can commented out the ground plane above to see the full environment map
#
# LightSource "infinite" "string mapname" ["textures/doge2_latlong.exr"]


#
# The following sections define scene geometry and the material properties
#

#
# sphere model
#
AttributeBegin

  Translate 1 0 -1
  Material "plastic" "color Kd" [0.4 0.5 0.4] "color Ks" [0.3 0.3 0.3] "float roughness" [0.2]
  Shape "sphere" "float radius" [0.5] 

  Translate 0 -1 1
  Material "matte" "spectrum Kd" [0.9 0.8 0.8]
  Shape "sphere" "float radius" [0.25] 

  Translate 0 0.5 -0.5
  Material "plastic" "color Kd" [.4 .2 .2] "color Ks" [.5 .5 .5] "float roughness" [.025]
  Shape "cylinder" "float radius" [0.2] "float zmin" [-0.5] "float zmax" [0.5]
AttributeEnd

#
# include a new geometry

# AttributeBegin
# Scale .008 .008 .008
# Rotate -60 0 0 1
#     Material "plastic" "color Kd" [.4 .2 .2] "color Ks" [.5 .5 .5]
#         "float roughness" [.025]
# Translate 180 50 20
#     Include "geometry/killeroo.pbrt"
#     Material "plastic" "color Ks" [.3 .3 .3] "color Kd" [.4 .5 .4]
#         "float roughness" [.15] 
# Translate -320 0 0
#     Include "geometry/killeroo.pbrt"
# AttributeEnd


WorldEnd





# solution 1:
# LightSource "spot" "color I" [50 50 50] "point from" [0 -4 0.6] "point to" [0 0 0] "float coneangle" [60]



# solution 2:
# AttributeBegin
#  AreaLightSource "area" "color L" [50 50 50]
#  # adjust light source position
#   Translate 0 0 2.5  # x y z
#   Rotate 180 1 0 0  # angle x y z  Note: this change the orientation of light source
#  # define the shape of the arealight to be a disk with radius 1.5
#  Shape "disk" "float radius" [1.5] 
# AttributeEnd



# solution 3:
# LightSource "spot" "color I" [50 50 50] "point from" [0 3 1] "point to" [0 0 0] "float coneangle" [60]

# AttributeBegin
#  AreaLightSource "area" "color L" [50 50 50]
#  # adjust light source position
#   Translate 0 -3 0  # x y z
#   Rotate -90 1 0 0  # angle x y z  Note: this change the orientation of light source
#  # define the shape of the arealight to be a disk with radius 1.5
#  Shape "disk" "float radius" [1.5] 
# AttributeEnd



# solution 4:
# LookAt 4.5 -1 0   # eye
#         0 0 0    # look at point
#         0 0 1    # up vector

# LightSource "spot" "color I" [50 50 50] "point from" [2 4 1] "point to" [0 0 0] "float coneangle" [60]

# AttributeBegin
#  AreaLightSource "area" "color L" [50 50 50]
#   Translate 5 -2 0  # x y z
#   Rotate -90 1 0 0  # angle x y z  Note: this change the orientation of light source
#  Shape "disk" "float radius" [1.5] 
# AttributeEnd

# AttributeBegin
#  AreaLightSource "area" "color L" [50 50 50]
#   Translate -4 0 3  # x y z
#   Rotate 180 1 0 0  # angle x y z  Note: this change the orientation of light source
#  Shape "disk" "float radius" [1.5] 
# AttributeEnd
